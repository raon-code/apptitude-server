name: Deploy Express.js to AWS EC2

on:
  push:
    branches:
      - development-main

jobs:
  build: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    # - name: Install dependencies
    #   run: npm install

    # - name: Build project
    #   run: npm run start:dev

    - name: Zip files
      run: zip -r apptitide-server.zip .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: |
        aws s3 cp apptitide-server.zip ${{ secrets.SERVER_S3_PATH }}/apptitide-server.zip


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Copy files to EC2 and restart
      run: |
        aws ssm send-command \
          --instance-ids "${{ secrets.SERVER_EC2_INSTANCE_ID }}" \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy Express.js application" \
          --parameters commands="
            aws s3 cp ${{ secrets.SERVER_S3_PATH }}/apptitude-server.zip ${{ secrets.SERVER_EC2_PATH }}/apptitude-server.zip, 
            rm -rf ${{ secrets.SERVER_EC2_PATH }}/apptitude-server, 
            unzip ${{ secrets.SERVER_EC2_PATH }}/apptitude-server.zip -d ${{ secrets.SERVER_EC2_PATH }}/apptitude-server, 
            cd ${{ secrets.SERVER_EC2_PATH }}/apptitude-server, 
            npm install, pm2 restart all
          " \
          --timeout-seconds 600 \
          --output text
